{"code":"import { FuzzySuggestModal, Plugin, PluginSettingTab, TFile, EditorSuggest, } from 'obsidian';\nimport Fuse from 'fuse.js';\nimport Hangul from 'hangul-js';\nconst DEFAULT_SETTINGS = {\n    fuzzyThreshold: 0.4,\n    overrideQuickSwitcher: true,\n};\nclass HangulIndex {\n    constructor(plugin) {\n        this.plugin = plugin;\n        this.entries = [];\n    }\n    /** 볼트 전체 초기 색인 */\n    async build() {\n        const files = this.plugin.app.vault.getMarkdownFiles();\n        this.entries = files.map((f) => this.toEntry(f));\n        this.rebuildFuse();\n    }\n    /** 파일 이름이 바뀔 때마다 업데이트 */\n    updateOnRename(file, oldPath) {\n        const i = this.entries.findIndex((e) => e.path === oldPath);\n        if (i > -1)\n            this.entries.splice(i, 1, this.toEntry(file));\n        else\n            this.entries.push(this.toEntry(file));\n        this.rebuildFuse();\n    }\n    /** 검색 */\n    search(q) {\n        const jamo = Hangul.disassemble(q).join('');\n        return this.fuse.search(jamo).map((r) => r.item);\n    }\n    /* ---------- 내부 ---------- */\n    toEntry(file) {\n        const display = file.basename;\n        return {\n            display,\n            jamo: Hangul.disassemble(display).join(''),\n            path: file.path,\n        };\n    }\n    rebuildFuse() {\n        this.fuse = new Fuse(this.entries, {\n            threshold: this.plugin.settings.fuzzyThreshold,\n            keys: ['jamo', 'display'],\n        });\n    }\n}\n/* ---------- Quick Switcher 모달 ---------- */\nclass HangulSwitcher extends FuzzySuggestModal {\n    constructor(app, index) {\n        super(app);\n        this.index = index;\n    }\n    getItems() { return this.index.search(this.inputEl.value || ''); }\n    getItemText(item) { return item.display; }\n    onChooseItem(item) { this.app.workspace.openLinkText(item.path, '', false); }\n}\n/* ---------- [[ 링크 자동완성 ---------- */\nclass HangulLinkSuggest extends EditorSuggest {\n    constructor(app, index) {\n        super(app);\n        this.index = index;\n    }\n    onTrigger(cursor, editor) {\n        const trigger = editor.getRange({ line: cursor.line, ch: cursor.ch - 2 }, cursor);\n        if (trigger === '[[') {\n            const file = this.app.workspace.getActiveFile();\n            if (!file)\n                return null;\n            const context = {\n                start: cursor,\n                end: cursor,\n                query: '',\n                editor: editor,\n                file: file\n            };\n            return context;\n        }\n        return null;\n    }\n    getSuggestions(ctx) {\n        return this.index.search(ctx.query);\n    }\n    renderSuggestion(item, el) {\n        el.textContent = item.display;\n    }\n    selectSuggestion(item) {\n        if (this.context?.editor) {\n            this.context.editor.replaceRange(item.display + ']]', this.context.start, this.context.end);\n        }\n    }\n}\n/* ---------- 플러그인 본체 ---------- */\nexport default class HangulSearchPlugin extends Plugin {\n    async onload() {\n        /* 1) 설정 로드 */\n        await this.loadSettings();\n        /* 2) 색인 빌드 */\n        this.index = new HangulIndex(this);\n        await this.index.build();\n        /* 3) 볼트 이벤트 감시 */\n        this.registerEvent(this.app.vault.on('rename', (file, oldPath) => {\n            if (file instanceof TFile)\n                this.index.updateOnRename(file, oldPath);\n        }));\n        /* 4) Quick Switcher 대체 */\n        if (this.settings.overrideQuickSwitcher) {\n            this.addCommand({\n                id: 'hangul-quick-switcher',\n                name: 'Hangul Quick Switcher',\n                hotkeys: [{ modifiers: ['Mod'], key: 'o' }], // ⌘O\n                callback: () => new HangulSwitcher(this.app, this.index).open(),\n            });\n        }\n        /* 5) 링크 자동완성 */\n        this.registerEditorSuggest(new HangulLinkSuggest(this.app, this.index));\n        /* 6) (선택) 설정 탭 */\n        this.addSettingTab(new (class extends PluginSettingTab {\n            constructor(app, plugin) {\n                super(app, plugin);\n                this.plugin = plugin;\n            }\n            display() {\n                const { containerEl } = this;\n                containerEl.empty();\n                containerEl.createEl('h2', { text: 'Hangul Fuzzy Search Settings' });\n                // TODO: threshold 슬라이더 등 추가\n            }\n        })(this.app, this));\n    }\n    /* ---------- 설정 load/save ---------- */\n    async loadSettings() {\n        this.settings = Object.assign({}, DEFAULT_SETTINGS, await this.loadData());\n    }\n    async saveSettings() { await this.saveData(this.settings); }\n}\n//# sourceMappingURL=main.js.map","references":["/Users/brianchoi/Library/CloudStorage/GoogleDrive-cubistwldnd@gmail.com/내 드라이브/_Documents_GDrive/Obsidian.HangulFuzzySearch/node_modules/obsidian/obsidian.d.ts","/Users/brianchoi/Library/CloudStorage/GoogleDrive-cubistwldnd@gmail.com/내 드라이브/_Documents_GDrive/Obsidian.HangulFuzzySearch/node_modules/fuse.js/dist/fuse.d.ts","/Users/brianchoi/Library/CloudStorage/GoogleDrive-cubistwldnd@gmail.com/내 드라이브/_Documents_GDrive/Obsidian.HangulFuzzySearch/node_modules/hangul-js/hangul.d.ts"],"map":"{\"version\":3,\"file\":\"main.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/main.ts\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"import {\\n    App,\\n    Editor,\\n    EditorPosition,\\n    FuzzySuggestModal,\\n    Plugin,\\n    PluginSettingTab,\\n    TFile,\\n    EditorSuggest,\\n    EditorSuggestContext,\\n    } from 'obsidian';\\n  \\n  import Fuse from 'fuse.js';\\n  import Hangul from 'hangul-js';\\n  \\n  /* ---------- 사용자 설정 ---------- */\\n  interface HangulSearchSettings {\\n    fuzzyThreshold: number;       // 0 (엄격) ↔ 1 (느슨)\\n    overrideQuickSwitcher: boolean;\\n  }\\n  \\n  const DEFAULT_SETTINGS: HangulSearchSettings = {\\n    fuzzyThreshold: 0.4,\\n    overrideQuickSwitcher: true,\\n  };\\n  \\n  /* ---------- 색인 ---------- */\\n  interface IndexEntry {\\n    display: string;   // 보여줄 이름\\n    jamo: string;      // 분해된 자모\\n    path: string;      // 파일 경로\\n  }\\n  \\n  class HangulIndex {\\n    private entries: IndexEntry[] = [];\\n    private fuse!: Fuse<IndexEntry>;\\n  \\n    constructor(private plugin: HangulSearchPlugin) {}\\n  \\n    /** 볼트 전체 초기 색인 */\\n    async build() {\\n      const files = this.plugin.app.vault.getMarkdownFiles();\\n      this.entries = files.map((f) => this.toEntry(f));\\n      this.rebuildFuse();\\n    }\\n  \\n    /** 파일 이름이 바뀔 때마다 업데이트 */\\n    updateOnRename(file: TFile, oldPath: string) {\\n      const i = this.entries.findIndex((e) => e.path === oldPath);\\n      if (i > -1) this.entries.splice(i, 1, this.toEntry(file));\\n      else this.entries.push(this.toEntry(file));\\n      this.rebuildFuse();\\n    }\\n  \\n    /** 검색 */\\n    search(q: string): IndexEntry[] {\\n      const jamo = Hangul.disassemble(q).join('');\\n      return this.fuse.search(jamo).map((r) => r.item);\\n    }\\n  \\n    /* ---------- 내부 ---------- */\\n    private toEntry(file: TFile): IndexEntry {\\n      const display = file.basename;\\n      return {\\n        display,\\n        jamo: Hangul.disassemble(display).join(''),\\n        path: file.path,\\n      };\\n    }\\n  \\n    private rebuildFuse() {\\n      this.fuse = new Fuse(this.entries, {\\n        threshold: this.plugin.settings.fuzzyThreshold,\\n        keys: ['jamo', 'display'],\\n      });\\n    }\\n  }\\n  \\n  /* ---------- Quick Switcher 모달 ---------- */\\n  class HangulSwitcher extends FuzzySuggestModal<IndexEntry> {\\n    constructor(app: App, private index: HangulIndex) {\\n      super(app);\\n    }\\n    getItems()            { return this.index.search(this.inputEl.value || ''); }\\n    getItemText(item: IndexEntry)     { return item.display; }\\n    onChooseItem(item: IndexEntry)    { this.app.workspace.openLinkText(item.path, '', false); }\\n  }\\n  \\n  /* ---------- [[ 링크 자동완성 ---------- */\\n  class HangulLinkSuggest extends EditorSuggest<IndexEntry> {\\n    constructor(app: App, private index: HangulIndex) {\\n      super(app);\\n    }\\n  \\n    onTrigger(cursor: EditorPosition, editor: Editor): EditorSuggestContext | null {\\n      const trigger = editor.getRange({ line: cursor.line, ch: cursor.ch - 2 }, cursor);\\n      if (trigger === '[[') {\\n        const file = this.app.workspace.getActiveFile();\\n        if (!file) return null;\\n        \\n        const context = { \\n          start: cursor, \\n          end: cursor, \\n          query: '',\\n          editor: editor,\\n          file: file\\n        };\\n        return context;\\n      }\\n      return null;\\n    }\\n  \\n    getSuggestions(ctx: EditorSuggestContext) {\\n      return this.index.search(ctx.query);\\n    }\\n    renderSuggestion(item: IndexEntry, el: HTMLElement) {\\n      el.textContent = item.display;\\n    }\\n    selectSuggestion(item: IndexEntry) {\\n      if (this.context?.editor) {\\n        this.context.editor.replaceRange(item.display + ']]', this.context.start, this.context.end);\\n      }\\n    }\\n  }\\n  \\n  /* ---------- 플러그인 본체 ---------- */\\n  export default class HangulSearchPlugin extends Plugin {\\n    settings!: HangulSearchSettings;\\n    index!: HangulIndex;\\n  \\n    async onload() {\\n      /* 1) 설정 로드 */\\n      await this.loadSettings();\\n  \\n      /* 2) 색인 빌드 */\\n      this.index = new HangulIndex(this);\\n      await this.index.build();\\n  \\n      /* 3) 볼트 이벤트 감시 */\\n      this.registerEvent(\\n        this.app.vault.on('rename', (file, oldPath) => {\\n          if (file instanceof TFile) this.index.updateOnRename(file, oldPath);\\n        }),\\n      );\\n  \\n      /* 4) Quick Switcher 대체 */\\n      if (this.settings.overrideQuickSwitcher) {\\n        this.addCommand({\\n          id: 'hangul-quick-switcher',\\n          name: 'Hangul Quick Switcher',\\n          hotkeys: [{ modifiers: ['Mod'], key: 'o' }], // ⌘O\\n          callback: () => new HangulSwitcher(this.app, this.index).open(),\\n        });\\n      }\\n  \\n      /* 5) 링크 자동완성 */\\n      this.registerEditorSuggest(new HangulLinkSuggest(this.app, this.index));\\n  \\n      /* 6) (선택) 설정 탭 */\\n      this.addSettingTab(\\n        new (class extends PluginSettingTab {\\n          constructor(app: App, private plugin: HangulSearchPlugin) {\\n            super(app, plugin);\\n          }\\n          display() {\\n            const { containerEl } = this;\\n            containerEl.empty();\\n            containerEl.createEl('h2', { text: 'Hangul Fuzzy Search Settings' });\\n            // TODO: threshold 슬라이더 등 추가\\n          }\\n        })(this.app, this),\\n      );\\n    }\\n  \\n    /* ---------- 설정 load/save ---------- */\\n    async loadSettings() {\\n      this.settings = Object.assign({}, DEFAULT_SETTINGS, await this.loadData());\\n    }\\n    async saveSettings() { await this.saveData(this.settings); }\\n  }\"]}","dtsmap":{"name":"/Users/brianchoi/Library/CloudStorage/GoogleDrive-cubistwldnd@gmail.com/내 드라이브/_Documents_GDrive/Obsidian.HangulFuzzySearch/node_modules/.cache/rollup-plugin-typescript2/placeholder/main.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"main.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/main.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAKH,MAAM,EAEN,KAAK,EAGJ,MAAM,UAAU,CAAC;AAMpB,UAAU,oBAAoB;IAC5B,cAAc,EAAE,MAAM,CAAC;IACvB,qBAAqB,EAAE,OAAO,CAAC;CAChC;AAQD,UAAU,UAAU;IAClB,OAAO,EAAE,MAAM,CAAC;IAChB,IAAI,EAAE,MAAM,CAAC;IACb,IAAI,EAAE,MAAM,CAAC;CACd;AAED,cAAM,WAAW;IAIH,OAAO,CAAC,MAAM;IAH1B,OAAO,CAAC,OAAO,CAAoB;IACnC,OAAO,CAAC,IAAI,CAAoB;gBAEZ,MAAM,EAAE,kBAAkB;IAE9C,kBAAkB;IACZ,KAAK;IAMX,yBAAyB;IACzB,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM;IAO3C,SAAS;IACT,MAAM,CAAC,CAAC,EAAE,MAAM,GAAG,UAAU,EAAE;IAM/B,OAAO,CAAC,OAAO;IASf,OAAO,CAAC,WAAW;CAMpB;AAkDD,MAAM,CAAC,OAAO,OAAO,kBAAmB,SAAQ,MAAM;IACpD,QAAQ,EAAG,oBAAoB,CAAC;IAChC,KAAK,EAAG,WAAW,CAAC;IAEd,MAAM;IA6CN,YAAY;IAGZ,YAAY;CACnB\"}"},"dts":{"name":"/Users/brianchoi/Library/CloudStorage/GoogleDrive-cubistwldnd@gmail.com/내 드라이브/_Documents_GDrive/Obsidian.HangulFuzzySearch/node_modules/.cache/rollup-plugin-typescript2/placeholder/main.d.ts","writeByteOrderMark":false,"text":"import { Plugin, TFile } from 'obsidian';\ninterface HangulSearchSettings {\n    fuzzyThreshold: number;\n    overrideQuickSwitcher: boolean;\n}\ninterface IndexEntry {\n    display: string;\n    jamo: string;\n    path: string;\n}\ndeclare class HangulIndex {\n    private plugin;\n    private entries;\n    private fuse;\n    constructor(plugin: HangulSearchPlugin);\n    /** 볼트 전체 초기 색인 */\n    build(): Promise<void>;\n    /** 파일 이름이 바뀔 때마다 업데이트 */\n    updateOnRename(file: TFile, oldPath: string): void;\n    /** 검색 */\n    search(q: string): IndexEntry[];\n    private toEntry;\n    private rebuildFuse;\n}\nexport default class HangulSearchPlugin extends Plugin {\n    settings: HangulSearchSettings;\n    index: HangulIndex;\n    onload(): Promise<void>;\n    loadSettings(): Promise<void>;\n    saveSettings(): Promise<void>;\n}\nexport {};\n//# sourceMappingURL=main.d.ts.map"}}
